import java.io.BufferedReader;import java.io.InputStreamReader;public class ExecuteCommand {    /**     * 调用系统命令     *     * @param command     * @return     * @throws Exception     */    public static String execute(String command) throws Exception {        ProcessBuilder processbuilder;        StringBuffer result = new StringBuffer();        //检查操作系统，如果是windows则使用cmd，否则使用sh        String property = System.getProperty("os.name");        if (property.toLowerCase().contains("win")) {            processbuilder = new ProcessBuilder("cmd", "/c", command);        } else {            processbuilder = new ProcessBuilder("/bin/bash", "-c", command);        }        //表示错误输出和正常输出在同一个流中输出        processbuilder.redirectErrorStream(true);        //新建一个线程，运行进程建造器processbuilder中的command命令和参数        Process start = processbuilder.start();        //使进程等待        start.waitFor();//            InputStreamReader inputStreamReader = new InputStreamReader(processbuilder.start().getErrorStream());//            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);        //从进程中获取输入流        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(start.getInputStream()));        //读取信息        String line;        while ((line = bufferedReader.readLine()) != null) {            result.append(line).append(System.lineSeparator());        }        bufferedReader.close();        start.waitFor();        processbuilder.directory();        return result.toString();//        BufferedInputStream bufferedInputStream = new BufferedInputStream(start.getInputStream());////        int available = bufferedInputStream.available();////        byte[] bytes = new byte[available];//        System.out.println(bytes.length + "and " + available);//        bufferedInputStream.read(bytes,0, available);////        File file = new File("D:\\java_workplace\\git\\Notebook\\SomeCode\\src\\ExecuteCommand.txt");//        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(file));////        bufferedWriter.write(new String(bytes));//        bufferedWriter.flush();////        return "ok";    }    public static void main(String[] args) throws Exception {        System.out.println(ExecuteCommand.execute("java -version"));    }}